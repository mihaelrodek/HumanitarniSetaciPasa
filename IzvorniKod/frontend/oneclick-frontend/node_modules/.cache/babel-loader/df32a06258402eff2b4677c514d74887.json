{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Programming\\\\ProjektPI\\\\oneclick\\\\IzvorniKod\\\\frontend\\\\oneclick-frontend\\\\src\\\\components\\\\screens\\\\calendar.screen.tsx\",\n    _s = $RefreshSig$();\n\nimport { Avatar, createStyles, Divider, List, ListItem, ListItemAvatar, ListItemText, ListSubheader, makeStyles } from '@material-ui/core';\nimport { addHours, format } from 'date-fns';\nimport React, { useEffect, useState } from 'react';\nimport CalendarService from '../../services/calendar.service';\nimport ImageService from '../../services/image.service';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto'\n  },\n  listSection: {\n    backgroundColor: 'inherit'\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0\n  }\n}));\n\nfunction CalendarScreen() {\n  _s();\n\n  const classes = useStyles();\n  const [data, setData] = useState();\n  const [dates, setDates] = useState();\n  useEffect(() => {\n    CalendarService.getCalendar().then(response => {\n      setData(response.data);\n      if (!!response.data && response.data.length > 0) setDates(response.data.map(e => new Date(Date.parse(e.startTime))).map(t => new Date(t.getFullYear(), t.getMonth(), t.getDate())).filter((date, i, self) => self.findIndex(d => d.getTime() === date.getTime()) === i).sort((a, b) => a.getTime() - b.getTime()));\n    });\n  }, []);\n\n  const datesEqual = (a, b) => {\n    return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-page\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      subheader: /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 55\n      }, this),\n      children: !!dates && dates.map(date => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.listSection,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: classes.ul,\n          children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: format(date, \"dd.MM.yyyy.\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), data.filter(e => datesEqual(new Date(Date.parse(e.startTime)), date)).map((e, i, self) => /*#__PURE__*/_jsxDEV(CalendarEntryItem, {\n            entry: e,\n            index: i,\n            list: self\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 34\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, `date-${format(date, \"yyyy-MM-dd\")}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CalendarScreen, \"b6/BXD9zFheaDAdcXWQr8nKkUtI=\", false, function () {\n  return [useStyles];\n});\n\n_c = CalendarScreen;\n\nfunction CalendarEntryItem(props) {\n  const e = props.entry;\n  let secondary = \"\";\n  if (!!e.association) secondary = `${e.association.name} - ${e.association.address}, ${e.association.place}`;else if (!!e.citizen) secondary = `${e.citizen.firstName} ${e.citizen.lastName} - ${e.citizen.phoneNumber}`;\n  const startTime = new Date(Date.parse(e.startTime));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: `${format(startTime, \"HH\")}-${format(addHours(startTime, e.duration), \"HH\")} sati`,\n        secondary: secondary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), e.animalIds.map(id => /*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: `/logo512.png`,\n          src: ImageService.getAnimalImageUrl(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))]\n    }, `entry-${format(startTime, \"yyyy-MM-dd-HH\")}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), props.index !== props.list.length - 1 ? /*#__PURE__*/_jsxDEV(Divider, {\n      component: \"li\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 63\n    }, this) : \"\"]\n  }, void 0, true);\n}\n\n_c2 = CalendarEntryItem;\nexport default CalendarScreen;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CalendarScreen\");\n$RefreshReg$(_c2, \"CalendarEntryItem\");","map":{"version":3,"sources":["C:/Programming/ProjektPI/oneclick/IzvorniKod/frontend/oneclick-frontend/src/components/screens/calendar.screen.tsx"],"names":["Avatar","createStyles","Divider","List","ListItem","ListItemAvatar","ListItemText","ListSubheader","makeStyles","addHours","format","React","useEffect","useState","CalendarService","ImageService","useStyles","theme","root","backgroundColor","palette","background","paper","position","overflow","listSection","ul","padding","CalendarScreen","classes","data","setData","dates","setDates","getCalendar","then","response","length","map","e","Date","parse","startTime","t","getFullYear","getMonth","getDate","filter","date","i","self","findIndex","d","getTime","sort","a","b","datesEqual","CalendarEntryItem","props","entry","secondary","association","name","address","place","citizen","firstName","lastName","phoneNumber","duration","animalIds","id","getAnimalImageUrl","index","list"],"mappings":"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","sourcesContent":["import { Avatar, createStyles, Divider, List, ListItem, ListItemAvatar, ListItemText, ListSubheader, makeStyles, Theme } from '@material-ui/core';\r\nimport { addHours, format } from 'date-fns';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CalendarEntry from '../../models/calendarEntry.model';\r\nimport CalendarService from '../../services/calendar.service';\r\nimport ImageService from '../../services/image.service';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      position: 'relative',\r\n      overflow: 'auto',\r\n    },\r\n    listSection: {\r\n      backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n      backgroundColor: 'inherit',\r\n      padding: 0,\r\n    },\r\n  }),\r\n);\r\n\r\nfunction CalendarScreen() {\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState<CalendarEntry[]>();\r\n    const [dates, setDates] = useState<Date[]>();\r\n\r\n    useEffect(() => {\r\n        CalendarService.getCalendar().then(response => {\r\n            setData(response.data);\r\n            if (!!response.data && response.data.length > 0)\r\n                setDates((response.data as CalendarEntry[])\r\n                    .map(e => new Date(Date.parse(e.startTime)))\r\n                    .map(t => new Date(t.getFullYear(), t.getMonth(), t.getDate()))\r\n                    .filter((date, i, self) => \r\n                        self.findIndex(d => d.getTime() === date.getTime()) === i\r\n                    )\r\n                    .sort((a,b) => a.getTime() - b.getTime()));\r\n        });\r\n    }, []);\r\n\r\n    const datesEqual = (a: Date, b: Date) => {\r\n        return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-page\">\r\n            <List className={classes.root} subheader={<li />}>\r\n                {!!dates && dates.map(date => (\r\n                    <li key={`date-${format(date, \"yyyy-MM-dd\")}`} className={classes.listSection}>\r\n                        <ul className={classes.ul}>\r\n                            <ListSubheader>{format(date, \"dd.MM.yyyy.\")}</ListSubheader>\r\n                            {data!.filter((e) => datesEqual(new Date(Date.parse(e.startTime)), date)).map((e, i, self) =>\r\n                                (<CalendarEntryItem entry={e} index={i} list={self}/>)\r\n                                )}\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CalendarEntryItem(props: {entry: CalendarEntry, index: number, list: CalendarEntry[]}) {\r\n    const e = props.entry;\r\n\r\n    let secondary = \"\";\r\n    if (!!e.association)\r\n        secondary = `${e.association.name} - ${e.association.address}, ${e.association.place}`;\r\n    else if (!!e.citizen)\r\n        secondary = `${e.citizen.firstName} ${e.citizen.lastName} - ${e.citizen.phoneNumber}`\r\n\r\n    const startTime = new Date(Date.parse(e.startTime));\r\n\r\n    return (\r\n        <>\r\n            <ListItem key={`entry-${format(startTime, \"yyyy-MM-dd-HH\")}`}>\r\n                <ListItemText primary={`${format(startTime, \"HH\")}-${format(addHours(startTime, e.duration), \"HH\")} sati`}\r\n                    secondary={secondary}></ListItemText>\r\n                {e.animalIds.map(id => (\r\n                    <ListItemAvatar>\r\n                        <Avatar\r\n                            alt={`/logo512.png`}\r\n                            src={ImageService.getAnimalImageUrl(id)}\r\n                        />\r\n                    </ListItemAvatar>\r\n                ))}\r\n            </ListItem>{props.index !== props.list.length-1 ? <Divider component=\"li\" /> : \"\"}\r\n        </>);\r\n}\r\n\r\nexport default CalendarScreen;\r\n"]},"metadata":{},"sourceType":"module"}