{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Programming\\\\ProjektPI\\\\oneclick\\\\IzvorniKod\\\\frontend\\\\oneclick-frontend\\\\src\\\\components\\\\screens\\\\calendar.screen.tsx\",\n    _s = $RefreshSig$();\n\nimport { Avatar, createStyles, Divider, List, ListItem, ListItemAvatar, ListItemText, ListSubheader, makeStyles } from '@material-ui/core';\nimport { addHours, format } from 'date-fns';\nimport React, { useState } from 'react';\nimport ImageService from '../../services/image.service';\nconst testData = [{\n  startTime: new Date(Date.parse('2021-01-10 16:00:00')),\n  duration: 1,\n  animalIds: [1, 2, 3],\n  association: {\n    id: 1,\n    name: \"Udruga 123\",\n    address: \"Iza ugla 23\",\n    place: \"Zagreb\"\n  }\n}, {\n  startTime: new Date(Date.parse('2021-01-08 16:00:00')),\n  duration: 1,\n  animalIds: [1, 2, 5],\n  association: {\n    id: 1,\n    name: \"Udruga 123\",\n    address: \"Iza ugla 23\",\n    place: \"Zagreb\"\n  }\n}, {\n  startTime: new Date(Date.parse('2021-01-06 16:00:00')),\n  duration: 2,\n  animalIds: [1, 3],\n  association: {\n    id: 1,\n    name: \"Udruga 123\",\n    address: \"Iza ugla 23\",\n    place: \"Zagreb\"\n  }\n}, {\n  startTime: new Date(Date.parse('2021-01-06 12:00:00')),\n  duration: 1,\n  animalIds: [1],\n  association: {\n    id: 1,\n    name: \"Udruga 123\",\n    address: \"Iza ugla 23\",\n    place: \"Zagreb\"\n  }\n}];\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto'\n  },\n  listSection: {\n    backgroundColor: 'inherit'\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0\n  }\n}));\n\nfunction CalendarScreen() {\n  _s();\n\n  const classes = useStyles();\n  const [data] = useState(testData.sort((a, b) => a.startTime.getHours() - b.startTime.getHours()));\n\n  const datesEqual = (a, b) => {\n    return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n  };\n\n  const dates = data.map(e => e.startTime).map(t => new Date(t.getFullYear(), t.getMonth(), t.getDate())).filter((date, i, self) => self.findIndex(d => d.getTime() === date.getTime()) === i).sort((a, b) => a.getTime() - b.getTime());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-page\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      subheader: /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 55\n      }, this),\n      children: dates.map(date => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.listSection,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: classes.ul,\n          children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: format(date, \"dd.MM.yyyy.\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), data.filter(e => datesEqual(e.startTime, date)).map((e, i, self) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${format(e.startTime, \"HH\")}-${format(addHours(e.startTime, e.duration), \"HH\")} sati`,\n                secondary: `${e.association.name} - ${e.association.address}, ${e.association.place}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), e.animalIds.map(id => /*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: `/logo512.png`,\n                  src: ImageService.getAnimalImageUrl(id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 45\n              }, this))]\n            }, `entry-${format(e.startTime, \"yyyy-MM-dd-HH\")}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), i !== self.length - 1 ? /*#__PURE__*/_jsxDEV(Divider, {\n              component: \"li\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 71\n            }, this) : \"\"]\n          }, void 0, true))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, `date-${format(date, \"yyyy-MM-dd\")}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CalendarScreen, \"QfKQ3QwCmJUKiKr4XenMfiMtAec=\", false, function () {\n  return [useStyles];\n});\n\n_c = CalendarScreen;\nexport default CalendarScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarScreen\");","map":{"version":3,"sources":["C:/Programming/ProjektPI/oneclick/IzvorniKod/frontend/oneclick-frontend/src/components/screens/calendar.screen.tsx"],"names":["Avatar","createStyles","Divider","List","ListItem","ListItemAvatar","ListItemText","ListSubheader","makeStyles","addHours","format","React","useState","ImageService","testData","startTime","Date","parse","duration","animalIds","association","id","name","address","place","useStyles","theme","root","backgroundColor","palette","background","paper","position","overflow","listSection","ul","padding","CalendarScreen","classes","data","sort","a","b","getHours","datesEqual","getFullYear","getMonth","getDate","dates","map","e","t","filter","date","i","self","findIndex","d","getTime","getAnimalImageUrl","length"],"mappings":"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","sourcesContent":["import { Avatar, createStyles, Divider, List, ListItem, ListItemAvatar, ListItemText, ListSubheader, makeStyles, Theme } from '@material-ui/core';\r\nimport { addHours, format } from 'date-fns';\r\nimport React, { useState } from 'react';\r\nimport ImageService from '../../services/image.service';\r\n\r\nconst testData = [\r\n    {\r\n        startTime: new Date(Date.parse('2021-01-10 16:00:00')),\r\n        duration: 1,\r\n        animalIds: [1, 2, 3],\r\n        association: {\r\n            id: 1,\r\n            name: \"Udruga 123\",\r\n            address: \"Iza ugla 23\",\r\n            place: \"Zagreb\"\r\n        }\r\n    },\r\n    {\r\n        startTime: new Date(Date.parse('2021-01-08 16:00:00')),\r\n        duration: 1,\r\n        animalIds: [1, 2, 5],\r\n        association: {\r\n            id: 1,\r\n            name: \"Udruga 123\",\r\n            address: \"Iza ugla 23\",\r\n            place: \"Zagreb\"\r\n        }\r\n    },\r\n    {\r\n        startTime: new Date(Date.parse('2021-01-06 16:00:00')),\r\n        duration: 2,\r\n        animalIds: [1, 3],\r\n        association: {\r\n            id: 1,\r\n            name: \"Udruga 123\",\r\n            address: \"Iza ugla 23\",\r\n            place: \"Zagreb\"\r\n        }\r\n    },\r\n    {\r\n        startTime: new Date(Date.parse('2021-01-06 12:00:00')),\r\n        duration: 1,\r\n        animalIds: [1],\r\n        association: {\r\n            id: 1,\r\n            name: \"Udruga 123\",\r\n            address: \"Iza ugla 23\",\r\n            place: \"Zagreb\"\r\n        }\r\n    }\r\n]\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      position: 'relative',\r\n      overflow: 'auto',\r\n    },\r\n    listSection: {\r\n      backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n      backgroundColor: 'inherit',\r\n      padding: 0,\r\n    },\r\n  }),\r\n);\r\n\r\nfunction CalendarScreen() {\r\n    const classes = useStyles();\r\n\r\n    const [data] = useState(testData.sort((a,b) => a.startTime.getHours() - b.startTime.getHours()));\r\n\r\n    const datesEqual = (a: Date, b: Date) => {\r\n        return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\r\n    }\r\n\r\n    const dates = data\r\n        .map(e => e.startTime)\r\n        .map(t => new Date(t.getFullYear(), t.getMonth(), t.getDate()))\r\n        .filter((date, i, self) => \r\n            self.findIndex(d => d.getTime() === date.getTime()) === i\r\n        )\r\n        .sort((a,b) => a.getTime() - b.getTime());\r\n\r\n    return (\r\n        <div className=\"container-page\">\r\n            <List className={classes.root} subheader={<li />}>\r\n                {dates.map(date => (\r\n                    <li key={`date-${format(date, \"yyyy-MM-dd\")}`} className={classes.listSection}>\r\n                        <ul className={classes.ul}>\r\n                            <ListSubheader>{format(date, \"dd.MM.yyyy.\")}</ListSubheader>\r\n                            {data.filter((e) => datesEqual(e.startTime, date)).map((e, i, self) =>\r\n                                (<>\r\n                                    <ListItem key={`entry-${format(e.startTime, \"yyyy-MM-dd-HH\")}`}>\r\n                                        <ListItemText primary={`${format(e.startTime, \"HH\")}-${format(addHours(e.startTime, e.duration), \"HH\")} sati`}\r\n                                            secondary={`${e.association.name} - ${e.association.address}, ${e.association.place}`}></ListItemText>\r\n                                        {e.animalIds.map(id => (\r\n                                            <ListItemAvatar>\r\n                                                <Avatar\r\n                                                    alt={`/logo512.png`}\r\n                                                    src={ImageService.getAnimalImageUrl(id)}\r\n                                                />\r\n                                            </ListItemAvatar>\r\n                                        ))}\r\n                                    </ListItem>{i !== self.length-1 ? <Divider component=\"li\" /> : \"\"}</>)\r\n                                )}\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarScreen;\r\n"]},"metadata":{},"sourceType":"module"}