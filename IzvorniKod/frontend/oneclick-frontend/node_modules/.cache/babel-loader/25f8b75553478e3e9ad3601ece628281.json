{"ast":null,"code":"import Axios from \"axios\";\nimport identityService from \"../services/identity.service\";\nconst instance = Axios.create();\ninstance.interceptors.request.use(config => {\n  const identityContext = identityService.getIdentityContext();\n\n  if (identityContext) {\n    return { ...config,\n      headers: {\n        'Authorization': 'Bearer ' + identityContext.token,\n        'Access-Control-Allow-Origin': '*'\n      },\n      mode: 'cors'\n    };\n  }\n\n  return { ...config,\n    headers: {\n      'Access-Control-Allow-Origin': '*'\n    },\n    mode: 'cors'\n  };\n}, errors => {\n  Promise.reject(errors);\n});\nexport default instance;","map":{"version":3,"sources":["C:/Programming/ProjektPI/oneclick/IzvorniKod/frontend/oneclick-frontend/src/services/api.service.ts"],"names":["Axios","identityService","instance","create","interceptors","request","use","config","identityContext","getIdentityContext","headers","token","mode","errors","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAA0C,OAA1C;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,EAAjB;AAEAD,QAAQ,CAACE,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAgC;AAC9D,QAAMC,eAAe,GAAGP,eAAe,CAACQ,kBAAhB,EAAxB;;AACA,MAAID,eAAJ,EAAqB;AACjB,WAAO,EACH,GAAGD,MADA;AAEHG,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYF,eAAe,CAACG,KADxC;AAEL,uCAA+B;AAF1B,OAFN;AAMHC,MAAAA,IAAI,EAAE;AANH,KAAP;AAQH;;AACD,SAAO,EACH,GAAGL,MADA;AAEHG,IAAAA,OAAO,EAAE;AACL,qCAA+B;AAD1B,KAFN;AAKHE,IAAAA,IAAI,EAAE;AALH,GAAP;AAOH,CAnBD,EAmBGC,MAAM,IAAI;AACTC,EAAAA,OAAO,CAACC,MAAR,CAAeF,MAAf;AACH,CArBD;AAuBA,eAAeX,QAAf","sourcesContent":["import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport identityService from \"../services/identity.service\";\r\n\r\nconst instance = Axios.create();\r\n\r\ninstance.interceptors.request.use((config: AxiosRequestConfig) => {\r\n    const identityContext = identityService.getIdentityContext();\r\n    if (identityContext) {\r\n        return {\r\n            ...config,\r\n            headers: {\r\n                'Authorization': 'Bearer ' + identityContext.token,\r\n                'Access-Control-Allow-Origin': '*',\r\n            },\r\n            mode: 'cors',\r\n        }\r\n    }\r\n    return {\r\n        ...config,\r\n        headers: {\r\n            'Access-Control-Allow-Origin': '*',\r\n        },\r\n        mode: 'cors',\r\n    };\r\n}, errors => {\r\n    Promise.reject(errors);\r\n});\r\n\r\nexport default instance;"]},"metadata":{},"sourceType":"module"}