{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Programming\\\\ProjektPI\\\\oneclick\\\\IzvorniKod\\\\frontend\\\\oneclick-frontend\\\\src\\\\components\\\\screens\\\\calendar.screen.tsx\",\n    _s = $RefreshSig$();\n\nimport { addDays, addHours, addSeconds, format, isAfter, isBefore, isSameDay } from 'date-fns';\nimport React, { useEffect, useState } from 'react';\nimport CalendarService from '../../services/calendar.service';\nimport { PDFDownloadLink, Document, Page, View, Text, Image, Font } from '@react-pdf/renderer';\nimport CalendarView from '../advanced/calendar';\nimport DateUtils from '../../misc/date.utils';\nimport ImageService from '../../services/image.service';\nimport { Button } from '@material-ui/core';\nimport { DatePicker } from '@material-ui/pickers';\n\nfunction CalendarDoc(props) {\n  Font.registerHyphenationCallback(word => [word]);\n  return /*#__PURE__*/_jsxDEV(Document, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      style: {\n        paddingTop: 35,\n        paddingBottom: 65,\n        paddingHorizontal: 35\n      },\n      children: [props.dates.map(d => /*#__PURE__*/_jsxDEV(View, {\n        style: {\n          paddingBottom: '30px'\n        },\n        wrap: false,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: {\n            paddingBottom: '10px',\n            color: 'gray',\n            fontSize: '12'\n          },\n          children: format(d, 'dd.MM.yyyy.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this), props.entries.filter(e => DateUtils.datesEqual(d, new Date(Date.parse(e.startTime)))).map(e => {\n          const time = new Date(Date.parse(e.startTime));\n          const timeDisplay = `${format(time, 'HH')}-${format(addHours(time, e.duration), 'HH')}`;\n          return /*#__PURE__*/_jsxDEV(View, {\n            style: {\n              paddingBottom: '10px',\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(View, {\n              style: {\n                width: 'auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: [timeDisplay, \" sati\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 49\n              }, this), !!e.association && /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  color: 'gray',\n                  fontSize: '12'\n                },\n                children: [e.association.name, \" - \", e.association.address, \", \", e.association.place]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 53\n              }, this), !!e.citizen && /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  color: 'gray',\n                  fontSize: '12'\n                },\n                children: [e.citizen.firstName, \" \", e.citizen.lastName, \", \", e.citizen.phoneNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 45\n            }, this), e.animalIds.map(a => /*#__PURE__*/_jsxDEV(View, {\n              style: {\n                padding: '3px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                style: {\n                  width: '30px',\n                  height: '30px',\n                  borderRadius: '8',\n                  objectFit: 'cover'\n                },\n                src: ImageService.getAnimalImageUrl(a)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 53\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 49\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Text, {\n        style: {\n          position: 'absolute',\n          fontSize: 12,\n          bottom: 30,\n          left: 0,\n          right: 0,\n          textAlign: 'center',\n          color: 'grey'\n        },\n        render: ({\n          pageNumber,\n          totalPages\n        }) => `${pageNumber} / ${totalPages}`,\n        fixed: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CalendarDoc;\n\nfunction CalendarScreen() {\n  _s();\n\n  const [data, setData] = useState();\n  const [dates, setDates] = useState();\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(addDays(startDate, 30));\n  const [generate, setGenerate] = useState(false);\n\n  const onStartDateChange = date => {\n    if (!!date) setStartDate(date);\n  };\n\n  const onEndDateChange = date => {\n    if (!!date) setEndDate(date);\n  };\n\n  useEffect(() => {\n    CalendarService.getCalendar().then(response => {\n      setData(response.data);\n      if (!!response.data && response.data.length > 0) setDates(response.data.map(e => new Date(Date.parse(e.startTime))).map(t => new Date(t.getFullYear(), t.getMonth(), t.getDate())).filter((date, i, self) => self.findIndex(d => d.getTime() === date.getTime()) === i).sort((a, b) => a.getTime() - b.getTime()));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          value: startDate,\n          onChange: onStartDateChange,\n          label: \"Od datuma\",\n          inputVariant: \"outlined\",\n          format: \"dd.MM.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          value: endDate,\n          minDate: startDate,\n          onChange: onEndDateChange,\n          label: \"Do datuma\",\n          inputVariant: \"outlined\",\n          format: \"dd.MM.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => setGenerate(true),\n          children: \"Stvori raspored\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), generate && !!data && !!dates && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(PDFDownloadLink, {\n            document: /*#__PURE__*/_jsxDEV(CalendarDoc, {\n              entries: data.filter(e => (isSameDay(Date.parse(e.startTime), startDate) || isAfter(Date.parse(e.startTime), startDate)) && isBefore(Date.parse(e.startTime), addDays(endDate, 1))),\n              dates: dates.filter(e => (isSameDay(e, startDate) || isAfter(e, startDate)) && isBefore(e, addSeconds(endDate, 50)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this),\n            fileName: \"kalendar.pdf\",\n            children: ({\n              blob,\n              url,\n              loading,\n              error\n            }) => loading ? 'Uƒçitavanje dokumenta...' : 'Preuzmite raspored!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CalendarView, {\n        entries: data,\n        dates: dates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CalendarScreen, \"yy3jykWrEQ9sZOFSZfYqOkZiwBU=\");\n\n_c2 = CalendarScreen;\nexport default CalendarScreen;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CalendarDoc\");\n$RefreshReg$(_c2, \"CalendarScreen\");","map":{"version":3,"sources":["C:/Programming/ProjektPI/oneclick/IzvorniKod/frontend/oneclick-frontend/src/components/screens/calendar.screen.tsx"],"names":["addDays","addHours","addSeconds","format","isAfter","isBefore","isSameDay","React","useEffect","useState","CalendarService","PDFDownloadLink","Document","Page","View","Text","Image","Font","CalendarView","DateUtils","ImageService","Button","DatePicker","CalendarDoc","props","registerHyphenationCallback","word","paddingTop","paddingBottom","paddingHorizontal","dates","map","d","color","fontSize","entries","filter","e","datesEqual","Date","parse","startTime","time","timeDisplay","duration","display","width","association","name","address","place","citizen","firstName","lastName","phoneNumber","animalIds","a","padding","height","borderRadius","objectFit","getAnimalImageUrl","position","bottom","left","right","textAlign","pageNumber","totalPages","CalendarScreen","data","setData","setDates","startDate","setStartDate","endDate","setEndDate","generate","setGenerate","onStartDateChange","date","onEndDateChange","getCalendar","then","response","length","t","getFullYear","getMonth","getDate","i","self","findIndex","getTime","sort","b","blob","url","loading","error"],"mappings":"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","sourcesContent":["import { addDays, addHours, addSeconds, format, isAfter, isBefore, isSameDay } from 'date-fns';\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport CalendarEntry from '../../models/calendarEntry.model';\r\nimport CalendarService from '../../services/calendar.service';\r\nimport { PDFDownloadLink, Document, Page, View, Text, Image, Font } from '@react-pdf/renderer'\r\nimport CalendarView from '../advanced/calendar';\r\nimport DateUtils from '../../misc/date.utils';\r\nimport ImageService from '../../services/image.service';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { DatePicker } from '@material-ui/pickers';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\n\r\nfunction CalendarDoc(props: {entries: CalendarEntry[], dates: Date[]}) {\r\n    Font.registerHyphenationCallback(word => [word]);\r\n\r\n    return (\r\n        <Document>\r\n            <Page style={{paddingTop: 35, paddingBottom: 65,paddingHorizontal: 35,}}>\r\n                {\r\n                    props.dates.map(d => (\r\n                        <View style={{paddingBottom: '30px'}} wrap={false}>\r\n                            <Text style={{paddingBottom: '10px', color: 'gray', fontSize: '12'}}>{format(d, 'dd.MM.yyyy.')}</Text>\r\n                            {\r\n                                props.entries.filter(e => DateUtils.datesEqual(d, new Date(Date.parse(e.startTime))))\r\n                                    .map(e => {\r\n                                        const time = new Date(Date.parse(e.startTime));\r\n                                        const timeDisplay = `${format(time, 'HH')}-${format(addHours(time, e.duration), 'HH')}`\r\n                                        return (<View style={{paddingBottom: '10px', display: 'flex'}}>\r\n                                            <View style={{width: 'auto'}}>\r\n                                                <Text>{timeDisplay} sati</Text>\r\n                                                {!!e.association && (\r\n                                                    <Text style={{color: 'gray', fontSize: '12'}}>{e.association.name} - {e.association.address}, {e.association.place}</Text>\r\n                                                )}\r\n                                                {!!e.citizen && (\r\n                                                    <Text style={{color: 'gray', fontSize: '12'}}>{e.citizen.firstName} {e.citizen.lastName}, {e.citizen.phoneNumber}</Text>\r\n                                                )}\r\n                                            </View>\r\n                                            {\r\n                                                e.animalIds.map(a => (\r\n                                                    <View style={{padding: '3px'}}>\r\n                                                        <Image style={{width:'30px', height:'30px', borderRadius: '8', objectFit: 'cover'}} src={ImageService.getAnimalImageUrl(a)} />\r\n                                                    </View>\r\n                                                ))\r\n                                            }\r\n                                        </View>)\r\n                                    })\r\n                            }\r\n                        </View>\r\n                    ))\r\n                }\r\n                <Text style={{ position: 'absolute', fontSize: 12, bottom: 30, left: 0, right: 0, textAlign: 'center', color: 'grey',}} render={({ pageNumber, totalPages }) => (\r\n                    `${pageNumber} / ${totalPages}`\r\n                )} fixed />\r\n            </Page>\r\n        </Document>\r\n    );\r\n}\r\n\r\nfunction CalendarScreen() {\r\n    const [data, setData] = useState<CalendarEntry[]>();\r\n    const [dates, setDates] = useState<Date[]>();\r\n\r\n    const [startDate, setStartDate] = useState<Date>(new Date());\r\n    const [endDate, setEndDate] = useState<Date>(addDays(startDate, 30));\r\n\r\n    const [generate, setGenerate] = useState(false);\r\n\r\n    const onStartDateChange = (date: Date | null) => {\r\n        if (!!date)\r\n            setStartDate(date);\r\n    }\r\n    \r\n    const onEndDateChange = (date: Date | null) => {\r\n        if (!!date)\r\n            setEndDate(date);\r\n    }\r\n\r\n    useEffect(() => {\r\n        CalendarService.getCalendar().then(response => {\r\n            setData(response.data);\r\n            if (!!response.data && response.data.length > 0)\r\n                setDates((response.data as CalendarEntry[])\r\n                    .map(e => new Date(Date.parse(e.startTime)))\r\n                    .map(t => new Date(t.getFullYear(), t.getMonth(), t.getDate()))\r\n                    .filter((date, i, self) =>\r\n                        self.findIndex(d => d.getTime() === date.getTime()) === i\r\n                    )\r\n                    .sort((a,b) => a.getTime() - b.getTime()));\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n\r\n            <div className=\"container-page\">\r\n            <div>\r\n                <DatePicker value={startDate} onChange={onStartDateChange} label=\"Od datuma\" inputVariant='outlined' format=\"dd.MM.\" />\r\n                <DatePicker value={endDate} minDate={startDate} onChange={onEndDateChange} label=\"Do datuma\" inputVariant='outlined' format=\"dd.MM.\" />\r\n                <Button variant=\"outlined\" onClick={() => setGenerate(true)} >Stvori raspored</Button>\r\n                {(generate && !!data && !!dates) && (<div>\r\n                        <PDFDownloadLink document={\r\n                        <CalendarDoc \r\n                            entries={data!.filter(e => (isSameDay(Date.parse(e.startTime), startDate) || isAfter(Date.parse(e.startTime), startDate)) && isBefore(Date.parse(e.startTime), addDays(endDate, 1)))} \r\n                            dates={dates!.filter(e => (isSameDay(e, startDate) || isAfter(e, startDate)) && isBefore(e, addSeconds(endDate, 50)))} />} fileName=\"kalendar.pdf\">\r\n                            {({ blob, url, loading, error }) => (loading ? 'Uƒçitavanje dokumenta...' : 'Preuzmite raspored!')}\r\n                        </PDFDownloadLink>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <CalendarView entries={data} dates={dates} />\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CalendarScreen;\r\n"]},"metadata":{},"sourceType":"module"}