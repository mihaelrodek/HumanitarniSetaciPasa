{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Programming\\\\ProjektPI\\\\oneclick\\\\IzvorniKod\\\\frontend\\\\oneclick-frontend\\\\src\\\\components\\\\screens\\\\calendar.screen.tsx\",\n    _s = $RefreshSig$();\n\nimport { addHours, format } from 'date-fns';\nimport React, { useEffect, useState } from 'react';\nimport CalendarService from '../../services/calendar.service';\nimport { Document, Font, Image, Page, PDFDownloadLink, Text, View } from '@react-pdf/renderer';\nimport CalendarView from '../advanced/calendar';\nimport DateUtils from '../../misc/date.utils';\nimport ImageService from '../../services/image.service';\n\nfunction CalendarDoc(props) {\n  Font.registerHyphenationCallback(word => [word]);\n  return /*#__PURE__*/_jsxDEV(Document, {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      style: {\n        padding: '50px'\n      },\n      children: props.dates.map(d => /*#__PURE__*/_jsxDEV(View, {\n        style: {\n          paddingBottom: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: {\n            paddingBottom: '10px',\n            color: 'gray',\n            fontSize: '12'\n          },\n          children: format(d, 'dd.MM.yyyy.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this), props.entries.filter(e => DateUtils.datesEqual(d, new Date(Date.parse(e.startTime)))).map(e => {\n          const time = new Date(Date.parse(e.startTime));\n          const timeDisplay = `${format(time, 'HH')}-${format(addHours(time, e.duration), 'HH')}`;\n          return /*#__PURE__*/_jsxDEV(View, {\n            style: {\n              paddingBottom: '10px',\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(View, {\n              style: {\n                width: 'auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: [timeDisplay, \" sati\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 49\n              }, this), !!e.association && /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  color: 'gray',\n                  fontSize: '12'\n                },\n                children: [e.association.name, \" - \", e.association.address, \", \", e.association.place]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 53\n              }, this), !!e.citizen && /*#__PURE__*/_jsxDEV(Text, {\n                style: {\n                  color: 'gray',\n                  fontSize: '12'\n                },\n                children: [e.citizen.firstName, \" \", e.citizen.lastName, \", \", e.citizen.phoneNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 45\n            }, this), e.animalIds.map(a => /*#__PURE__*/_jsxDEV(View, {\n              style: {\n                padding: '3px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                style: {\n                  width: '30px',\n                  height: '30px',\n                  borderRadius: '8',\n                  objectFit: 'cover'\n                },\n                src: ImageService.getAnimalImageUrl(a)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 53\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 49\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CalendarDoc;\n\nfunction CalendarScreen() {\n  _s();\n\n  const [data, setData] = useState();\n  const [dates, setDates] = useState();\n  useEffect(() => {\n    CalendarService.getCalendar().then(response => {\n      setData(response.data);\n      if (!!response.data && response.data.length > 0) setDates(response.data.map(e => new Date(Date.parse(e.startTime))).map(t => new Date(t.getFullYear(), t.getMonth(), t.getDate())).filter((date, i, self) => self.findIndex(d => d.getTime() === date.getTime()) === i).sort((a, b) => a.getTime() - b.getTime()));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [!!data && !!dates && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(PDFDownloadLink, {\n          document: /*#__PURE__*/_jsxDEV(CalendarDoc, {\n            entries: data,\n            dates: dates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 56\n          }, this),\n          fileName: \"kalendar.pdf\",\n          children: ({\n            blob,\n            url,\n            loading,\n            error\n          }) => loading ? 'Uƒçitavanje dokumenta...' : 'Preuzmite raspored!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(CalendarView, {\n        entries: data,\n        dates: dates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CalendarScreen, \"i9z0P6upQe1R340trEQGIfUwUfs=\");\n\n_c2 = CalendarScreen;\nexport default CalendarScreen;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CalendarDoc\");\n$RefreshReg$(_c2, \"CalendarScreen\");","map":{"version":3,"sources":["C:/Programming/ProjektPI/oneclick/IzvorniKod/frontend/oneclick-frontend/src/components/screens/calendar.screen.tsx"],"names":["addHours","format","React","useEffect","useState","CalendarService","Document","Font","Image","Page","PDFDownloadLink","Text","View","CalendarView","DateUtils","ImageService","CalendarDoc","props","registerHyphenationCallback","word","padding","dates","map","d","paddingBottom","color","fontSize","entries","filter","e","datesEqual","Date","parse","startTime","time","timeDisplay","duration","display","width","association","name","address","place","citizen","firstName","lastName","phoneNumber","animalIds","a","height","borderRadius","objectFit","getAnimalImageUrl","CalendarScreen","data","setData","setDates","getCalendar","then","response","length","t","getFullYear","getMonth","getDate","date","i","self","findIndex","getTime","sort","b","blob","url","loading","error"],"mappings":";;;;;AAAA,SAAQA,QAAR,EAAkBC,MAAlB,QAA+B,UAA/B;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqCC,eAArC,EAAsDC,IAAtD,EAA4DC,IAA5D,QAAuE,qBAAvE;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAAyE;AACrEV,EAAAA,IAAI,CAACW,2BAAL,CAAiCC,IAAI,IAAI,CAACA,IAAD,CAAzC;AAEA,sBAEI,QAAC,QAAD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAb;AAAA,gBAEQH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBACb,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAE;AAAhB,SAAb;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AACTA,YAAAA,aAAa,EAAE,MADN;AAETC,YAAAA,KAAK,EAAE,MAFE;AAGTC,YAAAA,QAAQ,EAAE;AAHD,WAAb;AAAA,oBAIIzB,MAAM,CAACsB,CAAD,EAAI,aAAJ;AAJV;AAAA;AAAA;AAAA;AAAA,gBADJ,EAOQN,KAAK,CAACU,OAAN,CAAcC,MAAd,CAAqBC,CAAC,IAAIf,SAAS,CAACgB,UAAV,CAAqBP,CAArB,EAAwB,IAAIQ,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,SAAb,CAAT,CAAxB,CAA1B,EACKX,GADL,CACSO,CAAC,IAAI;AACN,gBAAMK,IAAI,GAAG,IAAIH,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,SAAb,CAAT,CAAb;AACA,gBAAME,WAAW,GAAI,GAAElC,MAAM,CAACiC,IAAD,EAAO,IAAP,CAAa,IAAGjC,MAAM,CAACD,QAAQ,CAACkC,IAAD,EAAOL,CAAC,CAACO,QAAT,CAAT,EAA6B,IAA7B,CAAmC,EAAtF;AACA,8BAAQ,QAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACZ,cAAAA,aAAa,EAAE,MAAhB;AAAwBa,cAAAA,OAAO,EAAE;AAAjC,aAAb;AAAA,oCACJ,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAE;AAAR,eAAb;AAAA,sCACI,QAAC,IAAD;AAAA,2BAAOH,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEK,CAAC,CAACN,CAAC,CAACU,WAAJ,iBACG,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AACTd,kBAAAA,KAAK,EAAE,MADE;AAETC,kBAAAA,QAAQ,EAAE;AAFD,iBAAb;AAAA,2BAGIG,CAAC,CAACU,WAAF,CAAcC,IAHlB,SAG2BX,CAAC,CAACU,WAAF,CAAcE,OAHzC,QAGoDZ,CAAC,CAACU,WAAF,CAAcG,KAHlE;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHR,EAQK,CAAC,CAACb,CAAC,CAACc,OAAJ,iBACG,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AACTlB,kBAAAA,KAAK,EAAE,MADE;AAETC,kBAAAA,QAAQ,EAAE;AAFD,iBAAb;AAAA,2BAGIG,CAAC,CAACc,OAAF,CAAUC,SAHd,OAG0Bf,CAAC,CAACc,OAAF,CAAUE,QAHpC,QAGgDhB,CAAC,CAACc,OAAF,CAAUG,WAH1D;AAAA;AAAA;AAAA;AAAA;AAAA,sBATR;AAAA;AAAA;AAAA;AAAA;AAAA,oBADI,EAiBAjB,CAAC,CAACkB,SAAF,CAAYzB,GAAZ,CAAgB0B,CAAC,iBACb,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAC5B,gBAAAA,OAAO,EAAE;AAAV,eAAb;AAAA,qCACI,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAE;AACVkB,kBAAAA,KAAK,EAAE,MADG;AAEVW,kBAAAA,MAAM,EAAE,MAFE;AAGVC,kBAAAA,YAAY,EAAE,GAHJ;AAIVC,kBAAAA,SAAS,EAAE;AAJD,iBAAd;AAKG,gBAAA,GAAG,EAAEpC,YAAY,CAACqC,iBAAb,CAA+BJ,CAA/B;AALR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,CAjBA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AA6BH,SAjCL,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsDH;;KAzDQhC,W;;AA2DT,SAASqC,cAAT,GAA0B;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnD,QAAQ,EAAhC;AACA,QAAM,CAACiB,KAAD,EAAQmC,QAAR,IAAoBpD,QAAQ,EAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,eAAe,CAACoD,WAAhB,GAA8BC,IAA9B,CAAmCC,QAAQ,IAAI;AAC3CJ,MAAAA,OAAO,CAACI,QAAQ,CAACL,IAAV,CAAP;AACA,UAAI,CAAC,CAACK,QAAQ,CAACL,IAAX,IAAmBK,QAAQ,CAACL,IAAT,CAAcM,MAAd,GAAuB,CAA9C,EACIJ,QAAQ,CAAEG,QAAQ,CAACL,IAAV,CACJhC,GADI,CACAO,CAAC,IAAI,IAAIE,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,SAAb,CAAT,CADL,EAEJX,GAFI,CAEAuC,CAAC,IAAI,IAAI9B,IAAJ,CAAS8B,CAAC,CAACC,WAAF,EAAT,EAA0BD,CAAC,CAACE,QAAF,EAA1B,EAAwCF,CAAC,CAACG,OAAF,EAAxC,CAFL,EAGJpC,MAHI,CAGG,CAACqC,IAAD,EAAOC,CAAP,EAAUC,IAAV,KACJA,IAAI,CAACC,SAAL,CAAe7C,CAAC,IAAIA,CAAC,CAAC8C,OAAF,OAAgBJ,IAAI,CAACI,OAAL,EAApC,MAAwDH,CAJvD,EAMJI,IANI,CAMC,CAACtB,CAAD,EAAIuB,CAAJ,KAAUvB,CAAC,CAACqB,OAAF,KAAcE,CAAC,CAACF,OAAF,EANzB,CAAD,CAAR;AAOP,KAVD;AAWH,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACI;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGQ;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACM,CAAC,CAACf,IAAF,IAAU,CAAC,CAACjC,KAAb,iBAAwB;AAAA,+BACjB,QAAC,eAAD;AAAiB,UAAA,QAAQ,eAAE,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEiC,IAAtB;AAA6B,YAAA,KAAK,EAAEjC;AAApC;AAAA;AAAA;AAAA;AAAA,kBAA3B;AACiB,UAAA,QAAQ,EAAC,cAD1B;AAAA,oBAEK,CAAC;AACImD,YAAAA,IADJ;AAEIC,YAAAA,GAFJ;AAGIC,YAAAA,OAHJ;AAIIC,YAAAA;AAJJ,WAAD,KAKQD,OAAO,GAAG,yBAAH,GAA+B;AAPnD;AAAA;AAAA;AAAA;AAAA;AADiB;AAAA;AAAA;AAAA;AAAA,cAD7B,eAaI,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEpB,IAAvB;AAA6B,QAAA,KAAK,EAAEjC;AAApC;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAvCQgC,c;;MAAAA,c;AAyCT,eAAeA,cAAf","sourcesContent":["import {addHours, format} from 'date-fns';\r\nimport React, {useEffect, useState} from 'react';\r\nimport CalendarEntry from '../../models/calendarEntry.model';\r\nimport CalendarService from '../../services/calendar.service';\r\nimport {Document, Font, Image, Page, PDFDownloadLink, Text, View} from '@react-pdf/renderer'\r\nimport CalendarView from '../advanced/calendar';\r\nimport DateUtils from '../../misc/date.utils';\r\nimport ImageService from '../../services/image.service';\r\n\r\nfunction CalendarDoc(props: { entries: CalendarEntry[], dates: Date[] }) {\r\n    Font.registerHyphenationCallback(word => [word]);\r\n\r\n    return (\r\n\r\n        <Document>\r\n            <Page style={{padding: '50px'}}>\r\n                {\r\n                    props.dates.map(d => (\r\n                        <View style={{paddingBottom: '30px'}}>\r\n                            <Text style={{\r\n                                paddingBottom: '10px',\r\n                                color: 'gray',\r\n                                fontSize: '12'\r\n                            }}>{format(d, 'dd.MM.yyyy.')}</Text>\r\n                            {\r\n                                props.entries.filter(e => DateUtils.datesEqual(d, new Date(Date.parse(e.startTime))))\r\n                                    .map(e => {\r\n                                        const time = new Date(Date.parse(e.startTime));\r\n                                        const timeDisplay = `${format(time, 'HH')}-${format(addHours(time, e.duration), 'HH')}`\r\n                                        return (<View style={{paddingBottom: '10px', display: 'flex'}}>\r\n                                            <View style={{width: 'auto'}}>\r\n                                                <Text>{timeDisplay} sati</Text>\r\n                                                {!!e.association && (\r\n                                                    <Text style={{\r\n                                                        color: 'gray',\r\n                                                        fontSize: '12'\r\n                                                    }}>{e.association.name} - {e.association.address}, {e.association.place}</Text>\r\n                                                )}\r\n                                                {!!e.citizen && (\r\n                                                    <Text style={{\r\n                                                        color: 'gray',\r\n                                                        fontSize: '12'\r\n                                                    }}>{e.citizen.firstName} {e.citizen.lastName}, {e.citizen.phoneNumber}</Text>\r\n                                                )}\r\n                                            </View>\r\n                                            {\r\n                                                e.animalIds.map(a => (\r\n                                                    <View style={{padding: '3px'}}>\r\n                                                        <Image style={{\r\n                                                            width: '30px',\r\n                                                            height: '30px',\r\n                                                            borderRadius: '8',\r\n                                                            objectFit: 'cover'\r\n                                                        }} src={ImageService.getAnimalImageUrl(a)}/>\r\n                                                    </View>\r\n                                                ))\r\n                                            }\r\n                                        </View>)\r\n                                    })\r\n                            }\r\n                        </View>\r\n                    ))\r\n                }\r\n            </Page>\r\n        </Document>\r\n    );\r\n}\r\n\r\nfunction CalendarScreen() {\r\n    const [data, setData] = useState<CalendarEntry[]>();\r\n    const [dates, setDates] = useState<Date[]>();\r\n\r\n    useEffect(() => {\r\n        CalendarService.getCalendar().then(response => {\r\n            setData(response.data);\r\n            if (!!response.data && response.data.length > 0)\r\n                setDates((response.data as CalendarEntry[])\r\n                    .map(e => new Date(Date.parse(e.startTime)))\r\n                    .map(t => new Date(t.getFullYear(), t.getMonth(), t.getDate()))\r\n                    .filter((date, i, self) =>\r\n                        self.findIndex(d => d.getTime() === date.getTime()) === i\r\n                    )\r\n                    .sort((a, b) => a.getTime() - b.getTime()));\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n\r\n            <br/>\r\n                <div className=\"login\">\r\n                    {(!!data && !!dates) && (<div>\r\n                            <PDFDownloadLink document={<CalendarDoc entries={data!} dates={dates!}/>}\r\n                                             fileName=\"kalendar.pdf\">\r\n                                {({\r\n                                      blob,\r\n                                      url,\r\n                                      loading,\r\n                                      error\r\n                                  }) => (loading ? 'Uƒçitavanje dokumenta...' : 'Preuzmite raspored!')}\r\n                            </PDFDownloadLink>\r\n                        </div>\r\n                    )}\r\n                    <CalendarView entries={data} dates={dates}/>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarScreen;\r\n"]},"metadata":{},"sourceType":"module"}