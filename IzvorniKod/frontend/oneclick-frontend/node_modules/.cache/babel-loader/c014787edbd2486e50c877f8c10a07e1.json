{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Programming\\\\ProjektPI\\\\oneclick\\\\IzvorniKod\\\\frontend\\\\oneclick-frontend\\\\src\\\\components\\\\advanced\\\\animalSelector.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, FormControl, InputAdornment, InputLabel, OutlinedInput } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport AnimalCard from \"../basic/animal.card\";\nimport '../../styles/AnimalSelector.css';\nimport { DateTimePicker } from '@material-ui/pickers';\nimport { useForm } from 'react-hook-form';\nimport WalkService from '../../services/walk.service';\nimport history from '../../misc/history';\nimport { startOfHour } from 'date-fns/esm';\nimport IdentityService from '../../services/identity.service';\nimport PetsIcon from '@material-ui/icons/Pets';\n\nclass AnimalUnit {\n  constructor(animal, selected, selectable) {\n    this.animal = void 0;\n    this.selected = void 0;\n    this.selectable = void 0;\n    this.animal = animal;\n    this.selected = selected;\n    this.selectable = selectable;\n  }\n\n}\n\nfunction AnimalSelector(props) {\n  _s();\n\n  const identity = IdentityService.getIdentityContext();\n  const defaultValues = {\n    associationId: parseInt(props.associationId),\n    duration: 1,\n    startTime: new Date()\n  };\n  const {\n    register,\n    handleSubmit,\n    setValue\n  } = useForm({\n    defaultValues\n  });\n  useEffect(() => {\n    register({\n      name: \"startTime\",\n      type: \"date\"\n    });\n    register({\n      name: \"duration\",\n      type: \"number\"\n    });\n    register({\n      name: \"associationId\",\n      type: \"number\"\n    });\n  });\n\n  const onSubmit = data => {\n    WalkService.getAvailableAnimals(data).then(response => {\n      setAnimals(animals.map(a => new AnimalUnit(a.animal, false, response.data.includes(a.animal.id))));\n    }).catch(error => {});\n  };\n\n  const registerWalk = () => {\n    const walkRequest = {\n      animals: JSON.stringify(animals.filter(a => a.selected).map(a => a.animal)),\n      duration: String(duration),\n      startTime: String(startTime)\n    };\n    history.push('/walk/confirm', walkRequest);\n  };\n\n  const isWalkRegisterable = () => {\n    let registerable = false;\n    animals.forEach(a => {\n      registerable = registerable || a.selected;\n    });\n    return registerable;\n  };\n\n  const [animals, setAnimals] = useState(props.animals.map(a => new AnimalUnit(a, false, true)));\n  const [duration, setDuration] = useState(defaultValues.duration);\n  const [startTime, setStartTime] = useState(defaultValues.startTime);\n\n  const handleDurationChange = () => event => {\n    setDuration(parseInt(event.target.value));\n    setValue('duration', event.target.value);\n  };\n\n  const handleDateChange = date => {\n    if (!!date) {\n      const fixedDate = startOfHour(date);\n      setStartTime(fixedDate);\n      setValue('startTime', fixedDate);\n    }\n  };\n\n  const onSelected = (id, selected) => {\n    const animal = animals.find(a => a.animal.id === id);\n\n    if (animal.animal.walkType === \"SINGLE\") {\n      if (selected) setAnimals(animals.map(a => new AnimalUnit(a.animal, a.animal.id === id, a.animal.id === id)));else setAnimals(animals.map(a => new AnimalUnit(a.animal, false, true)));\n    } else if (animal.animal.walkType === \"GROUP\") {\n      if (selected) setAnimals(animals.map(a => new AnimalUnit(a.animal, a.animal.id === id || a.selected, a.animal.walkType === \"GROUP\")));else {\n        let allUnselected = true;\n        animals.forEach(a => {\n          if (a.selected && a.animal.id !== id) allUnselected = false;\n        });\n        if (allUnselected) setAnimals(animals.map(a => new AnimalUnit(a.animal, false, true)));else setAnimals(animals.map(a => new AnimalUnit(a.animal, a.selected && a.animal.id !== id, a.animal.walkType === \"GROUP\")));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animal-selector-root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animal-selector-appointment-picker\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(DateTimePicker, {\n            id: \"startTime\",\n            name: \"startTime\",\n            value: startTime,\n            onChange: handleDateChange,\n            disablePast: true,\n            format: \"dd.MM.yyyy HH' sati'\",\n            inputVariant: \"outlined\",\n            label: \"Po\\u010Detak \\u0161etnje\",\n            minutesStep: 60,\n            ampm: false,\n            views: [\"date\", \"hours\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"duration\",\n              children: \"Duljina \\u0161etnje\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"duration\",\n              name: \"duration\",\n              value: duration,\n              onChange: handleDurationChange(),\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: \"sati\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 47\n              }, this),\n              \"aria-describedby\": \"outlined-duration-helper-text\",\n              inputProps: {\n                'aria-label': 'duration',\n                'min': 1,\n                'max': 3\n              },\n              labelWidth: 0,\n              type: \"number\",\n              label: \"Duljina \\u0161etnje\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"outlined\",\n            children: \"Pretra\\u017Ei\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animal-selector-confirm-button\",\n        children: !identity ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Morate se ulogirati prije prijave \\u0161etnje!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 32\n        }, this) : identity.roles.includes(\"ROLE_CITIZEN\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-walk\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: registerWalk,\n            disabled: !isWalkRegisterable(),\n            variant: \"outlined\",\n            children: [\"Prijavi \\u0161etnju\", /*#__PURE__*/_jsxDEV(PetsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: animals.map(a => {\n        return /*#__PURE__*/_jsxDEV(AnimalCard, {\n          animal: a.animal,\n          disabled: !a.selectable,\n          selected: a.selected,\n          onSelected: onSelected\n        }, a.animal.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AnimalSelector, \"c0bf7PLfoZf9PlFeJukDCzoMLcc=\", false, function () {\n  return [useForm];\n});\n\n_c = AnimalSelector;\nexport default AnimalSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimalSelector\");","map":{"version":3,"sources":["C:/Programming/ProjektPI/oneclick/IzvorniKod/frontend/oneclick-frontend/src/components/advanced/animalSelector.tsx"],"names":["Button","FormControl","InputAdornment","InputLabel","OutlinedInput","React","useEffect","useState","AnimalCard","DateTimePicker","useForm","WalkService","history","startOfHour","IdentityService","PetsIcon","AnimalUnit","constructor","animal","selected","selectable","AnimalSelector","props","identity","getIdentityContext","defaultValues","associationId","parseInt","duration","startTime","Date","register","handleSubmit","setValue","name","type","onSubmit","data","getAvailableAnimals","then","response","setAnimals","animals","map","a","includes","id","catch","error","registerWalk","walkRequest","JSON","stringify","filter","String","push","isWalkRegisterable","registerable","forEach","setDuration","setStartTime","handleDurationChange","event","target","value","handleDateChange","date","fixedDate","onSelected","find","walkType","allUnselected","roles"],"mappings":"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","sourcesContent":["import {Button, FormControl, InputAdornment, InputLabel, OutlinedInput} from '@material-ui/core';\r\nimport React, {useEffect, useState} from 'react';\r\nimport Animal from \"../../models/animal.model\";\r\nimport AnimalCard from \"../basic/animal.card\";\r\nimport '../../styles/AnimalSelector.css';\r\nimport {DateTimePicker} from '@material-ui/pickers';\r\nimport {useForm} from 'react-hook-form';\r\nimport AvailableAnimalsRequest from '../../models/availableAnimals.model';\r\nimport WalkService from '../../services/walk.service';\r\nimport history from '../../misc/history';\r\nimport {startOfHour} from 'date-fns/esm';\r\nimport IdentityService from '../../services/identity.service';\r\nimport PetsIcon from '@material-ui/icons/Pets';\r\n\r\ntype AnimalSelectorProps = {\r\n    animals: Animal[],\r\n    associationId: string\r\n}\r\n\r\nclass AnimalUnit {\r\n    animal: Animal;\r\n    selected: boolean;\r\n    selectable: boolean;\r\n\r\n    constructor(animal: Animal, selected: boolean, selectable: boolean) {\r\n        this.animal = animal;\r\n        this.selected = selected;\r\n        this.selectable = selectable;\r\n    }\r\n}\r\n\r\nfunction AnimalSelector(props: AnimalSelectorProps) {\r\n    const identity = IdentityService.getIdentityContext();\r\n\r\n    const defaultValues: AvailableAnimalsRequest = {\r\n        associationId: parseInt(props.associationId),\r\n        duration: 1,\r\n        startTime: new Date()\r\n    }\r\n\r\n    const {register, handleSubmit, setValue} = useForm<AvailableAnimalsRequest>({defaultValues});\r\n    useEffect(() => {\r\n        register({name: \"startTime\", type: \"date\"});\r\n        register({name: \"duration\", type: \"number\"});\r\n        register({name: \"associationId\", type: \"number\"});\r\n    })\r\n\r\n    const onSubmit = (data: AvailableAnimalsRequest) => {\r\n        WalkService.getAvailableAnimals(data)\r\n            .then(response => {\r\n                setAnimals(animals.map(a => new AnimalUnit(a.animal, false, response.data.includes(a.animal.id))));\r\n            }).catch(error => {\r\n\r\n        });\r\n    }\r\n\r\n    const registerWalk = () => {\r\n        const walkRequest = {\r\n            animals: JSON.stringify(animals.filter(a => a.selected).map(a => a.animal)),\r\n            duration: String(duration),\r\n            startTime: String(startTime)\r\n        };\r\n\r\n        history.push('/walk/confirm', walkRequest);\r\n    }\r\n\r\n    const isWalkRegisterable = (): boolean => {\r\n        let registerable = false;\r\n\r\n        animals.forEach(a => {\r\n            registerable = registerable || a.selected;\r\n        });\r\n\r\n        return registerable;\r\n    }\r\n\r\n    const [animals, setAnimals] = useState<AnimalUnit[]>(props.animals.map(a => new AnimalUnit(a, false, true)));\r\n    const [duration, setDuration] = useState(defaultValues.duration);\r\n    const [startTime, setStartTime] = useState(defaultValues.startTime);\r\n\r\n    const handleDurationChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDuration(parseInt(event.target.value));\r\n        setValue('duration', event.target.value);\r\n    };\r\n\r\n    const handleDateChange = (date: Date | null) => {\r\n        if (!!date) {\r\n            const fixedDate = startOfHour(date);\r\n\r\n            setStartTime(fixedDate);\r\n            setValue('startTime', fixedDate);\r\n        }\r\n    };\r\n\r\n    const onSelected = (id: number, selected: boolean) => {\r\n        const animal = animals.find(a => a.animal.id === id);\r\n        if (animal!.animal.walkType === \"SINGLE\") {\r\n            if (selected)\r\n                setAnimals(animals.map(a => new AnimalUnit(a.animal, a.animal.id === id, a.animal.id === id)));\r\n            else\r\n                setAnimals(animals.map(a => new AnimalUnit(a.animal, false, true)));\r\n        } else if (animal!.animal.walkType === \"GROUP\") {\r\n            if (selected)\r\n                setAnimals(animals.map(a => new AnimalUnit(a.animal, a.animal.id === id || a.selected, a.animal.walkType === \"GROUP\")));\r\n            else {\r\n                let allUnselected = true;\r\n                animals.forEach(a => {\r\n                    if (a.selected && a.animal.id !== id) allUnselected = false;\r\n                });\r\n\r\n                if (allUnselected)\r\n                    setAnimals(animals.map(a => new AnimalUnit(a.animal, false, true)));\r\n                else\r\n                    setAnimals(animals.map(a => new AnimalUnit(a.animal, a.selected && a.animal.id !== id, a.animal.walkType === \"GROUP\")))\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"animal-selector-root\">\r\n            <div className=\"animal-selector-appointment-picker\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div>\r\n                        <DateTimePicker\r\n                            id=\"startTime\"\r\n                            name=\"startTime\"\r\n                            value={startTime}\r\n                            onChange={handleDateChange}\r\n                            disablePast={true}\r\n                            format=\"dd.MM.yyyy HH' sati'\"\r\n                            inputVariant=\"outlined\"\r\n                            label=\"Početak šetnje\"\r\n                            minutesStep={60}\r\n                            ampm={false}\r\n                            views={[\"date\", \"hours\"]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <FormControl variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"duration\">Duljina šetnje</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"duration\"\r\n                                name=\"duration\"\r\n                                value={duration}\r\n                                onChange={handleDurationChange()}\r\n                                endAdornment={<InputAdornment position=\"end\">sati</InputAdornment>}\r\n                                aria-describedby=\"outlined-duration-helper-text\"\r\n                                inputProps={{\r\n                                    'aria-label': 'duration',\r\n                                    'min': 1,\r\n                                    'max': 3\r\n                                }}\r\n                                labelWidth={0}\r\n                                type='number'\r\n                                label=\"Duljina šetnje\"\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    <div>\r\n                        <Button type=\"submit\" variant=\"outlined\">Pretraži</Button>\r\n                    </div>\r\n                </form>\r\n                {\r\n\r\n                }\r\n                <div className={\"animal-selector-confirm-button\"}>\r\n                    {\r\n                        !identity\r\n                            ? (<div>Morate se ulogirati prije prijave šetnje!</div>)\r\n                            : identity.roles.includes(\"ROLE_CITIZEN\")\r\n                            && (<div className=\"register-walk\">\r\n\r\n                                <Button onClick={registerWalk} disabled={!isWalkRegisterable()} variant=\"outlined\">\r\n                                    Prijavi šetnju\r\n                                    <PetsIcon/>\r\n                                </Button>\r\n                                </div>\r\n                            )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {animals.map(a => {\r\n                    return <AnimalCard key={a.animal.id} animal={a.animal} disabled={!a.selectable}\r\n                                       selected={a.selected} onSelected={onSelected}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AnimalSelector;"]},"metadata":{},"sourceType":"module"}