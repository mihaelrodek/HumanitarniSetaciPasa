{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Programming\\\\ProjektPI\\\\oneclick\\\\IzvorniKod\\\\frontend\\\\oneclick-frontend\\\\src\\\\components\\\\screens\\\\citizenEdit.screen.tsx\",\n    _s = $RefreshSig$();\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport '../../styles/Registration.css';\nimport history from '../../misc/history';\nimport { MdPets } from \"react-icons/md\";\nimport ProfileService from '../../services/profile.service';\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\nimport AccountEditService from '../../services/accountEdit.service';\n\nfunction CitizenAccountEdit() {\n  _s();\n\n  const profileData = ProfileService.useGetProfile();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError,\n    setValue\n  } = useForm();\n  useEffect(() => {\n    register(\"isPublic\");\n  }, []);\n  let isPublicValueChanged = false;\n\n  const isPublicChanged = (event, checked) => {\n    setValue(\"isPublic\", checked);\n    isPublicValueChanged = true;\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n    if (!isPublicValueChanged) data.isPublic = profileData.public;\n    AccountEditService.postCitizenEdit(data).then(response => {\n      if (response.status === 200) {\n        history.push(\"/\");\n      }\n    }).catch(error => {\n      const data = error.response.data;\n\n      switch (data.field) {\n        case \"USERNAME\":\n          if (data.error === \"NON_UNIQUE\") {\n            setError(\"username\", {\n              type: \"validate\",\n              message: \"Korisničko ime je zauzeto!\"\n            });\n          }\n\n          break;\n\n        case \"EMAIL\":\n          if (data.error === \"NON_UNIQUE\") {\n            setError(\"email\", {\n              type: \"validate\",\n              message: \"Email adresa je zauzeta!\"\n            });\n          }\n\n          break;\n\n        case \"PHONE_NUMBER\":\n          if (data.error === \"INVALID_FORMAT\") {\n            setError(\"phoneNumber\", {\n              type: \"validate\",\n              message: \"Format broja telefona nije validan.\"\n            });\n          }\n\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !!profileData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"citizenregistrationbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(MdPets, {\n          className: \"bigregistrationlogo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          className: \"form-registration\",\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text\",\n              children: \"Izmjena profila:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"registrationtext\",\n            children: \"Korisni\\u010Dko ime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-center\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"username\",\n              inputRef: register({\n                pattern: {\n                  value: /^[A-Z0-9._-]{6,20}$/i,\n                  message: \"Format korisničkog imena nije validan.\"\n                }\n              }),\n              name: \"username\",\n              label: \"Unesite korisni\\u010Dko ime\",\n              variant: \"outlined\",\n              defaultValue: profileData.username,\n              className: \"textfield\",\n              helperText: errors.username && errors.username.message,\n              error: !!errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"registrationtext\",\n            children: \"E-mail adresa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-center\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"email\",\n              type: \"email\",\n              inputRef: register({\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: \"Format adrese nije validan.\"\n                }\n              }),\n              name: \"email\",\n              label: \"Unesite e-mail adresu\",\n              variant: \"outlined\",\n              defaultValue: profileData.email,\n              className: \"textfield\",\n              helperText: errors.email && errors.email.message,\n              error: !!errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"registrationtext\",\n            children: \"Lozinka\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-center\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"password\",\n              type: \"password\",\n              inputRef: register({\n                pattern: {\n                  value: /^[A-Z0-9.!_-]{8,30}$/i,\n                  message: \"Format šifre nije validan.\"\n                }\n              }),\n              name: \"password\",\n              label: \"Unesite lozinku\",\n              variant: \"outlined\",\n              className: \"textfield\",\n              helperText: errors.password && errors.password.message,\n              error: !!errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"registrationtext\",\n            children: \"Ime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-center\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"firstName\",\n              inputRef: register(),\n              name: \"firstName\",\n              label: \"Unesite ime\",\n              variant: \"outlined\",\n              defaultValue: profileData.firstName,\n              className: \"textfield\",\n              helperText: errors.firstName && errors.firstName.message,\n              error: !!errors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"registrationtext\",\n            children: \"Prezime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-center\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"lastName\",\n              inputRef: register(),\n              name: \"lastName\",\n              label: \"Unesite prezime\",\n              variant: \"outlined\",\n              defaultValue: profileData.lastName,\n              className: \"textfield\",\n              helperText: errors.lastName && errors.lastName.message,\n              error: !!errors.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"registrationtext\",\n            children: \"Broj telefona\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-center\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"phoneNumber\",\n              type: \"tel\",\n              inputRef: register(),\n              name: \"phoneNumber\",\n              label: \"Unesite broj telefona\",\n              variant: \"outlined\",\n              defaultValue: profileData.phoneNumber,\n              className: \"textfield\",\n              helperText: errors.phoneNumber && errors.phoneNumber.message,\n              error: !!errors.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-center\",\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              className: \"text\",\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                name: \"isPublic\",\n                id: \"isPublic\",\n                onChange: isPublicChanged,\n                defaultChecked: profileData.public,\n                className: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this),\n              label: \"Ho\\u0107ete li da va\\u0161a statistika bude javna?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Izmijenite profil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CitizenAccountEdit, \"DjSw4OTFS67LjWepB8Jnb4zg+Ek=\", false, function () {\n  return [ProfileService.useGetProfile, useForm];\n});\n\n_c = CitizenAccountEdit;\nexport default CitizenAccountEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CitizenAccountEdit\");","map":{"version":3,"sources":["C:/Programming/ProjektPI/oneclick/IzvorniKod/frontend/oneclick-frontend/src/components/screens/citizenEdit.screen.tsx"],"names":["Button","TextField","React","useEffect","useForm","history","MdPets","ProfileService","Checkbox","FormControlLabel","AccountEditService","CitizenAccountEdit","profileData","useGetProfile","register","handleSubmit","errors","setError","setValue","isPublicValueChanged","isPublicChanged","event","checked","onSubmit","data","console","log","isPublic","public","postCitizenEdit","then","response","status","push","catch","error","field","type","message","pattern","value","username","email","password","firstName","lastName","phoneNumber"],"mappings":"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","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React, { ChangeEvent, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport CitizenRegistrationInfo from '../../models/citizenRegistration.model';\r\nimport '../../styles/Registration.css';\r\nimport RegistrationService from '../../services/registration.service';\r\nimport history from '../../misc/history';\r\nimport RegistrationValidationError from '../../models/registrationValidationError.model';\r\nimport {MdPets} from \"react-icons/md\";\r\nimport ProfileService from '../../services/profile.service';\r\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport AccountEditService from '../../services/accountEdit.service';\r\n\r\nfunction CitizenAccountEdit() {\r\n    const profileData = ProfileService.useGetProfile();\r\n\r\n    const { register, handleSubmit, errors, setError, setValue } = useForm<CitizenRegistrationInfo>();\r\n\r\n    useEffect(() => {\r\n        register(\"isPublic\");\r\n    }, []);\r\n\r\n    let isPublicValueChanged = false;\r\n\r\n    const isPublicChanged = (event: ChangeEvent<HTMLElement>, checked: boolean) => {\r\n        setValue(\"isPublic\", checked);\r\n        isPublicValueChanged = true;\r\n    }\r\n\r\n    const onSubmit = (data: CitizenRegistrationInfo) => {\r\n        console.log(data);\r\n\r\n        if (!isPublicValueChanged)\r\n            data.isPublic = profileData!.public;   \r\n\r\n        AccountEditService.postCitizenEdit(\r\n            data\r\n        ).then(response => {\r\n            if (response.status === 200) {\r\n                history.push(\"/\");\r\n            }\r\n        }).catch(error => {\r\n            const data = (error.response.data as RegistrationValidationError);\r\n\r\n            switch (data.field) {\r\n                case \"USERNAME\":\r\n                if (data.error === \"NON_UNIQUE\") {\r\n                    setError(\"username\", { type: \"validate\", message: \"Korisničko ime je zauzeto!\" });\r\n                }\r\n                break;\r\n                case \"EMAIL\":\r\n                if (data.error === \"NON_UNIQUE\") {\r\n                    setError(\"email\", { type: \"validate\", message: \"Email adresa je zauzeta!\" });\r\n                }\r\n                break;\r\n                case \"PHONE_NUMBER\":\r\n                if (data.error === \"INVALID_FORMAT\") {\r\n                    setError(\"phoneNumber\", { type: \"validate\", message: \"Format broja telefona nije validan.\"});\r\n                }  \r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(!!profileData && (\r\n            <div className=\"citizenregistrationbox\">\r\n            <a href=\"/\"><MdPets className=\"bigregistrationlogo\"/></a>\r\n                <div className=\"container\">\r\n                <form onSubmit={handleSubmit(onSubmit)} className=\"form-registration\" noValidate>\r\n                    <div className=\"horizontal-center\">\r\n                        <h1 className=\"text\">Izmjena profila:</h1>\r\n                    </div>\r\n                    <h3 className=\"registrationtext\">Korisničko ime</h3>\r\n                    <div className=\"horizontal-center\">\r\n                        <TextField id=\"username\" \r\n                            inputRef={register({\r\n                            pattern: {\r\n                                value: /^[A-Z0-9._-]{6,20}$/i,\r\n                                message: \"Format korisničkog imena nije validan.\"\r\n                            }\r\n                            })} \r\n                            name=\"username\" \r\n                            label=\"Unesite korisničko ime\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileData.username}\r\n                            className=\"textfield\"\r\n                            helperText={errors.username && errors.username.message} \r\n                            error={!!errors.username} />\r\n                    </div>\r\n                    <h3 className=\"registrationtext\">E-mail adresa</h3>\r\n                    <div className=\"horizontal-center\">\r\n                        <TextField id=\"email\" \r\n                            type=\"email\" \r\n                            inputRef={register({\r\n                            pattern: {\r\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                message: \"Format adrese nije validan.\"\r\n                            }\r\n                            })} \r\n                            name=\"email\" \r\n                            label=\"Unesite e-mail adresu\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileData.email}\r\n                            className=\"textfield\"\r\n                            helperText={errors.email && errors.email.message}\r\n                            error={!!errors.email} />\r\n                    </div>\r\n                    <h3 className=\"registrationtext\">Lozinka</h3>\r\n                    <div className=\"horizontal-center\">\r\n                        <TextField id=\"password\" \r\n                            type=\"password\" \r\n                            inputRef={register({\r\n                            pattern: {\r\n                                value: /^[A-Z0-9.!_-]{8,30}$/i,\r\n                                message: \"Format šifre nije validan.\"\r\n                            }\r\n                            })} \r\n                            name=\"password\" \r\n                            label=\"Unesite lozinku\" \r\n                            variant=\"outlined\"\r\n                            className=\"textfield\"\r\n                            helperText={errors.password && errors.password.message}\r\n                            error={!!errors.password} />\r\n                    </div>\r\n                    <h3 className=\"registrationtext\">Ime</h3>\r\n                    <div className=\"horizontal-center\">\r\n                        <TextField id=\"firstName\" \r\n                            inputRef={register()} \r\n                            name=\"firstName\" \r\n                            label=\"Unesite ime\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileData.firstName}\r\n                            className=\"textfield\" \r\n                            helperText={errors.firstName && errors.firstName.message}\r\n                            error={!!errors.firstName} />\r\n                    </div>\r\n                    <h3 className=\"registrationtext\">Prezime</h3>\r\n                    <div className=\"horizontal-center\">\r\n                        <TextField id=\"lastName\" \r\n                            inputRef={register()} \r\n                            name=\"lastName\" \r\n                            label=\"Unesite prezime\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileData.lastName}\r\n                            className=\"textfield\"\r\n                            helperText={errors.lastName && errors.lastName.message}\r\n                            error={!!errors.lastName} />\r\n                    </div>\r\n                    <h3 className=\"registrationtext\">Broj telefona</h3>\r\n                    <div className=\"horizontal-center\">\r\n                        <TextField id=\"phoneNumber\" \r\n                            type=\"tel\" \r\n                            inputRef={register()} \r\n                            name=\"phoneNumber\" \r\n                            label=\"Unesite broj telefona\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileData.phoneNumber}\r\n                            className=\"textfield\"\r\n                            helperText={errors.phoneNumber && errors.phoneNumber.message}\r\n                            error={!!errors.phoneNumber} />\r\n                    </div>\r\n                    <div className=\"horizontal-center\">\r\n                        <FormControlLabel\r\n                            className=\"text\"\r\n                            control={\r\n                                <Checkbox\r\n                                        name=\"isPublic\"\r\n                                        id=\"isPublic\" \r\n                                        onChange={isPublicChanged}\r\n                                        defaultChecked={profileData.public}\r\n                                        className=\"checkbox\"\r\n                                    />\r\n                            }\r\n                            label=\"Hoćete li da vaša statistika bude javna?\"  \r\n                            />\r\n                    </div>\r\n                    <div className=\"horizontal-center\">\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Izmijenite profil</Button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CitizenAccountEdit;\r\n\r\n"]},"metadata":{},"sourceType":"module"}