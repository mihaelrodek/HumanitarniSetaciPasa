{"ast":null,"code":"import getHostName from \"./host.service\";\nimport api from \"./api.service\";\n\nfunction getAssociationImageUrl(id) {\n  return getHostName(`/image/association/${id}`);\n}\n\nfunction getAnimalImageUrl(id) {\n  return getHostName(`/image/animal/${id}`);\n}\n\nfunction getUserImageUrl() {\n  return getHostName(\"/image/user\");\n}\n\nfunction getDefaultImage() {\n  return \"/puppy.png\";\n}\n\nfunction getUserImageAndSetIt(setterFun) {\n  api.get(getUserImageUrl(), {\n    responseType: 'arraybuffer'\n  }).then(res => {\n    setterFun(Buffer.from(res.data, \"binary\").toString(\"base64\"));\n  });\n}\n\nconst ImageService = {\n  getAssociationImageUrl,\n  getAnimalImageUrl,\n  getUserImageUrl,\n  getDefaultImage,\n  getUserImageAndSetIt\n};\nexport default ImageService;","map":{"version":3,"sources":["C:/Programming/ProjektPI/oneclick/IzvorniKod/frontend/oneclick-frontend/src/services/image.service.ts"],"names":["getHostName","api","getAssociationImageUrl","id","getAnimalImageUrl","getUserImageUrl","getDefaultImage","getUserImageAndSetIt","setterFun","get","responseType","then","res","Buffer","from","data","toString","ImageService"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,SAASC,sBAAT,CAAgCC,EAAhC,EAAqD;AACjD,SAAOH,WAAW,CAAE,sBAAqBG,EAAG,EAA1B,CAAlB;AACH;;AAED,SAASC,iBAAT,CAA2BD,EAA3B,EAAgD;AAC5C,SAAOH,WAAW,CAAE,iBAAgBG,EAAG,EAArB,CAAlB;AACH;;AAED,SAASE,eAAT,GAA2B;AACvB,SAAOL,WAAW,CAAC,aAAD,CAAlB;AACH;;AAED,SAASM,eAAT,GAA2B;AACvB,SAAO,YAAP;AACH;;AAED,SAASC,oBAAT,CAA8BC,SAA9B,EAAmD;AAC/CP,EAAAA,GAAG,CAACQ,GAAJ,CAAQJ,eAAe,EAAvB,EAA2B;AAACK,IAAAA,YAAY,EAAE;AAAf,GAA3B,EACKC,IADL,CACUC,GAAG,IAAI;AACTJ,IAAAA,SAAS,CAACK,MAAM,CAACC,IAAP,CAAYF,GAAG,CAACG,IAAhB,EAAsB,QAAtB,EAAgCC,QAAhC,CAAyC,QAAzC,CAAD,CAAT;AACH,GAHL;AAIH;;AAED,MAAMC,YAAY,GAAG;AAACf,EAAAA,sBAAD;AAAyBE,EAAAA,iBAAzB;AAA4CC,EAAAA,eAA5C;AAA6DC,EAAAA,eAA7D;AAA8EC,EAAAA;AAA9E,CAArB;AAEA,eAAeU,YAAf","sourcesContent":["import getHostName from \"./host.service\";\r\nimport api from \"./api.service\";\r\n\r\nfunction getAssociationImageUrl(id: number | string) {\r\n    return getHostName(`/image/association/${id}`);\r\n}\r\n\r\nfunction getAnimalImageUrl(id: number | string) {\r\n    return getHostName(`/image/animal/${id}`);\r\n}\r\n\r\nfunction getUserImageUrl() {\r\n    return getHostName(\"/image/user\");\r\n}\r\n\r\nfunction getDefaultImage() {\r\n    return \"/puppy.png\"\r\n}\r\n\r\nfunction getUserImageAndSetIt(setterFun: Function) {\r\n    api.get(getUserImageUrl(), {responseType: 'arraybuffer'})\r\n        .then(res => {\r\n            setterFun(Buffer.from(res.data, \"binary\").toString(\"base64\"));\r\n        });\r\n}\r\n\r\nconst ImageService = {getAssociationImageUrl, getAnimalImageUrl, getUserImageUrl, getDefaultImage, getUserImageAndSetIt};\r\n\r\nexport default ImageService;"]},"metadata":{},"sourceType":"module"}