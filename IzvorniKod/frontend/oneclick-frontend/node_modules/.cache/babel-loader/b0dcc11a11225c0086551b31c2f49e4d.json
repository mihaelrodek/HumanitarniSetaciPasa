{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Programming\\\\ProjektPI\\\\oneclick\\\\IzvorniKod\\\\frontend\\\\oneclick-frontend\\\\src\\\\components\\\\basic\\\\animal.card.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, CardActionArea, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core';\nimport ImageService from '../../services/image.service';\nconst useStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    margin: '15px',\n    minWidth: 275,\n    maxWidth: 275,\n    position: 'relative'\n  },\n  disabled: {\n    filter: 'grayscale(100%)'\n  },\n  selected: {\n    boxShadow: '0 4px 7px 3px rgba(0, 0, 255, 1)'\n  },\n  media: {\n    height: 140\n  }\n});\n\nfunction AnimalCard(props) {\n  _s();\n\n  const disabled = !props.disabled ? false : true;\n  const styles = useStyles();\n  const gender = props.animal.gender === \"MALE\" ? \"Muško\" : \"Žensko\";\n\n  const onClicked = () => {\n    if (!disabled) {\n      if (!!props.onSelected) props.onSelected(props.animal.id, !props.selected);\n      return !props.selected;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: `${styles.root} ${props.selected && !disabled ? styles.selected : ''} ${disabled ? styles.disabled : ''}`,\n    variant: \"outlined\",\n    children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n      onClick: event => {\n        onClicked();\n      },\n      disableRipple: disabled,\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: styles.media,\n        component: \"img\",\n        src: ImageService.getAnimalImageUrl(props.animal.id),\n        onError: e => {\n          e.target.src = ImageService.getDefaultImage();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: props.animal.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: props.animal.breed.breedName + ', ' + gender + ', ' + props.animal.birthYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: props.animal.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AnimalCard, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c = AnimalCard;\nexport default AnimalCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimalCard\");","map":{"version":3,"sources":["C:/Programming/ProjektPI/oneclick/IzvorniKod/frontend/oneclick-frontend/src/components/basic/animal.card.tsx"],"names":["React","Card","CardActionArea","CardContent","CardMedia","makeStyles","Typography","ImageService","useStyles","root","display","margin","minWidth","maxWidth","position","disabled","filter","selected","boxShadow","media","height","AnimalCard","props","styles","gender","animal","onClicked","onSelected","id","event","getAnimalImageUrl","e","target","src","getDefaultImage","name","breed","breedName","birthYear","description"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Card, CardActionArea, CardContent, CardMedia, makeStyles, Typography} from '@material-ui/core';\r\nimport Animal from '../../models/animal.model';\r\nimport ImageService from '../../services/image.service';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'inline-block',\r\n        margin: '15px',\r\n        minWidth: 275,\r\n        maxWidth: 275,\r\n        position: 'relative'\r\n    },\r\n    disabled: {\r\n        filter: 'grayscale(100%)'\r\n    },\r\n    selected: {\r\n        boxShadow: '0 4px 7px 3px rgba(0, 0, 255, 1)',\r\n    },\r\n    media: {\r\n        height: 140,\r\n    }\r\n});\r\n\r\ntype AnimalCardProps = {\r\n    animal: Animal,\r\n    disabled?: boolean,\r\n    onSelected?: Function\r\n    selected: boolean\r\n    setSelected?: Function\r\n}\r\n\r\nfunction AnimalCard(props: AnimalCardProps) {\r\n    const disabled = !props.disabled ? false : true;\r\n\r\n    const styles = useStyles();\r\n\r\n    const gender = props.animal.gender === \"MALE\" ? \"Muško\" : \"Žensko\";\r\n\r\n    const onClicked = () => {\r\n        if (!disabled) {\r\n            if (!!props.onSelected)\r\n                props.onSelected(props.animal.id, !props.selected);\r\n            return !props.selected;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            className={`${styles.root} ${props.selected && !disabled ? styles.selected : ''} ${disabled ? styles.disabled : ''}`}\r\n            variant=\"outlined\">\r\n            <CardActionArea onClick={event => {\r\n                onClicked()\r\n            }} disableRipple={disabled}>\r\n                <CardMedia\r\n                    className={styles.media} component='img' src={ImageService.getAnimalImageUrl(props.animal.id)}\r\n                    onError={(e: any) => {\r\n                        e.target.src = ImageService.getDefaultImage()\r\n                    }}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {props.animal.name}\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        {props.animal.breed.breedName + ', ' + gender + ', ' + props.animal.birthYear}\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        {props.animal.description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default AnimalCard;"]},"metadata":{},"sourceType":"module"}