{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport getHostName from \"./host.service\";\nimport api from './api.service';\n\nasync function getAssociations() {\n  const {\n    data\n  } = await api.get(getHostName(\"/associations\"));\n  return data;\n}\n\nexport const useGetAssociations = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const getData = async () => {\n    const results = await getAssociations();\n    setData(results);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return data;\n};\n\n_s(useGetAssociations, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");","map":{"version":3,"sources":["C:/Programming/ProjektPI/oneclick/IzvorniKod/frontend/oneclick-frontend/src/services/association.service.ts"],"names":["useEffect","useState","getHostName","api","getAssociations","data","get","useGetAssociations","setData","getData","results"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,eAAeC,eAAf,GAAkE;AAC9D,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMF,GAAG,CAACG,GAAJ,CAAQJ,WAAW,CAAC,eAAD,CAAnB,CAAvB;AACA,SAAOG,IAAP;AACH;;AAED,OAAO,MAAME,kBAAkB,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBP,QAAQ,CAAyB,EAAzB,CAAhC;;AAEA,QAAMQ,OAAO,GAAG,YAAY;AACxB,UAAMC,OAAO,GAAG,MAAMN,eAAe,EAArC;AACAI,IAAAA,OAAO,CAACE,OAAD,CAAP;AACH,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOJ,IAAP;AACH,CAbM;;GAAME,kB","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport AssociationShortInfo from \"../models/associationShortInfo.model\";\r\nimport getHostName from \"./host.service\";\r\nimport api from './api.service'\r\n\r\nasync function getAssociations(): Promise<AssociationShortInfo[]> {\r\n    const { data } = await api.get(getHostName(\"/associations\"));\r\n    return data;\r\n}\r\n\r\nexport const useGetAssociations = () => {\r\n    const [data, setData] = useState<AssociationShortInfo[]>([]);\r\n\r\n    const getData = async () => {\r\n        const results = await getAssociations();\r\n        setData(results);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, []);\r\n\r\n    return data;\r\n}"]},"metadata":{},"sourceType":"module"}