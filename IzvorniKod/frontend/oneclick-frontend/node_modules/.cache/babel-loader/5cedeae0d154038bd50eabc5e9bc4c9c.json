{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport getHostName from \"./host.service\";\nimport api from './api.service';\n\nasync function getAssociations() {\n  const {\n    data\n  } = await api.get(getHostName(\"/associations\"));\n  return data;\n}\n\nconst useGetAssociations = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const getData = async () => {\n    const results = await getAssociations();\n    setData(results);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return data;\n};\n\n_s(useGetAssociations, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\nconst useGetAssociation = id => {\n  _s2();\n\n  const [data, setData] = useState();\n  const [isFetching, setIsFetching] = useState(true);\n  useEffect(() => {\n    const fetchAssociation = async () => {\n      try {\n        setData(data);\n        setIsFetching(true);\n        const response = await api.get(getHostName(`/associations/${id}`));\n        setData(response.data);\n        setIsFetching(false);\n      } catch (e) {\n        console.log(e);\n        setData(data);\n        setIsFetching(false);\n      }\n    };\n\n    fetchAssociation(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return [data, isFetching];\n};\n\n_s2(useGetAssociation, \"nUBWMh6Cf98x1LIph+latCyNX8g=\");\n\nconst exports = {\n  useGetAssociations,\n  useGetAssociation\n};\nexport default exports;","map":{"version":3,"sources":["C:/Programming/ProjektPI/oneclick/IzvorniKod/frontend/oneclick-frontend/src/services/association.service.ts"],"names":["useEffect","useState","getHostName","api","getAssociations","data","get","useGetAssociations","setData","getData","results","useGetAssociation","id","isFetching","setIsFetching","fetchAssociation","response","e","console","log","exports"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,eAAeC,eAAf,GAAkE;AAC9D,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMF,GAAG,CAACG,GAAJ,CAAQJ,WAAW,CAAC,eAAD,CAAnB,CAAvB;AACA,SAAOG,IAAP;AACH;;AAED,MAAME,kBAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACF,IAAD,EAAOG,OAAP,IAAkBP,QAAQ,CAAyB,EAAzB,CAAhC;;AAEA,QAAMQ,OAAO,GAAG,YAAY;AACxB,UAAMC,OAAO,GAAG,MAAMN,eAAe,EAArC;AACAI,IAAAA,OAAO,CAACE,OAAD,CAAP;AACH,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOJ,IAAP;AACH,CAbD;;GAAME,kB;;AAeN,MAAMI,iBAAiB,GAAIC,EAAD,IAAoD;AAAA;;AAC1E,QAAM,CAACP,IAAD,EAAOG,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,IAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,gBAAgB,GAAG,YAAY;AACjC,UAAI;AACAP,QAAAA,OAAO,CAACH,IAAD,CAAP;AACAS,QAAAA,aAAa,CAAC,IAAD,CAAb;AACA,cAAME,QAAQ,GAAG,MAAMb,GAAG,CAACG,GAAJ,CAAQJ,WAAW,CAAE,iBAAgBU,EAAG,EAArB,CAAnB,CAAvB;AACAJ,QAAAA,OAAO,CAACQ,QAAQ,CAACX,IAAV,CAAP;AACAS,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OAND,CAME,OAAOG,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAT,QAAAA,OAAO,CAACH,IAAD,CAAP;AACAS,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ,KAZD;;AAaAC,IAAAA,gBAAgB,GAdJ,CAgBZ;AACH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SAAO,CAACV,IAAD,EAAOQ,UAAP,CAAP;AACH,CAxBD;;IAAMF,iB;;AA0BN,MAAMS,OAAO,GAAG;AAACb,EAAAA,kBAAD;AAAqBI,EAAAA;AAArB,CAAhB;AACA,eAAeS,OAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport AssociationShortInfo from \"../models/associationShortInfo.model\";\r\nimport Association from \"../models/association.model\";\r\nimport getHostName from \"./host.service\";\r\nimport api from './api.service'\r\n\r\nasync function getAssociations(): Promise<AssociationShortInfo[]> {\r\n    const { data } = await api.get(getHostName(\"/associations\"));\r\n    return data;\r\n}\r\n\r\nconst useGetAssociations = () => {\r\n    const [data, setData] = useState<AssociationShortInfo[]>([]);\r\n\r\n    const getData = async () => {\r\n        const results = await getAssociations();\r\n        setData(results);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, []);\r\n\r\n    return data;\r\n}\r\n\r\nconst useGetAssociation = (id: string): [Association | undefined, boolean] => {\r\n    const [data, setData] = useState<Association>();\r\n    const [isFetching, setIsFetching] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchAssociation = async () => {\r\n            try {\r\n                setData(data);\r\n                setIsFetching(true);\r\n                const response = await api.get(getHostName(`/associations/${id}`));\r\n                setData(response.data);\r\n                setIsFetching(false);\r\n            } catch (e) {\r\n                console.log(e);\r\n                setData(data);\r\n                setIsFetching(false);\r\n            }\r\n        };\r\n        fetchAssociation();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return [data, isFetching];\r\n}\r\n\r\nconst exports = {useGetAssociations, useGetAssociation};\r\nexport default exports;"]},"metadata":{},"sourceType":"module"}